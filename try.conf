

version: '3'

services:
  nginx:
    container_name: nginx
    build: ./requirements/nginx
    depends_on:
      - adminer
      - redis
      - hugo
    ports:
      - 443:443
    volumes:
      - wordpress_data:/var/www/html
    restart: always
    networks:
      - network

  mariadb:
    container_name: mariadb
    build: ./requirements/mariadb
    #volumes allow to store in a persistent disk the content in a local disk
    #db_data is a volume created by docker directly
    volumes:
      - mariadb_data:/var/lib/mysql
    # in case of problem we restart automatically the container
    networks:
      - network
    restart: always
    env_file:
      - .env

  wordpress:
    container_name: wordpress
    #Create a depedency between the 2 container, db will be launched before
    depends_on:
      - mariadb
    build:
      context: ./requirements/wordpress
      dockerfile: Dockerfile
    restart: always
    env_file:
      - .env
    volumes:
      - wordpress_data:/var/www/html
    networks:
      - network








# version: '3.8'

# services:
#   wordpress:
#     image: wordpress:latest
#     depends_on:
#       - db
#     environment:
#       WORDPRESS_DB_HOST: db:3306
#       WORDPRESS_DB_USER: root
#       WORDPRESS_DB_PASSWORD: example
#       WORDPRESS_DB_NAME: wordpress
#     volumes:
#       - wordpress_data:/var/www/html
#     networks:
#       - app-network

#   db:
#     image: mariadb:latest
#     environment:
#       MYSQL_ROOT_PASSWORD: example
#       MYSQL_DATABASE: wordpress
#       MYSQL_USER: wordpress
#       MYSQL_PASSWORD: wordpress
#     volumes:
#       - db_data:/var/lib/mysql
#     networks:
#       - app-network

#   nginx:
#     image: nginx:latest
#     depends_on:
#       - wordpress
#     ports:
#       - "8080:80"
#     volumes:
#       - ./nginx.conf:/etc/nginx/nginx.conf:ro
#     networks:
#       - app-network

# volumes:
#   wordpress_data:
#   db_data:

# networks:
#   app-network:
